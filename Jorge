mi-proyecto-chat-avatar/
 â”œâ”€â”€ package.json
 â”œâ”€â”€ server.js
 â”œâ”€â”€ .env.example
 â””â”€â”€ README.md

{
  "name": "chat-avatar",
  "version": "1.0.0",
  "main": "server.js",
  "type": "module",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "node-fetch": "^3.3.2",
    "dotenv": "^16.4.1"
  }
}
import express from "express";
import fetch from "node-fetch";
import dotenv from "dotenv";

dotenv.config();
const app = express();
app.use(express.json());

// RUTA CHATGPT
app.post("/chat", async (req, res) => {
  try {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "gpt-4o-mini",
        messages: [{ role: "user", content: req.body.message }]
      })
    });

    const data = await response.json();
    res.json(data);
  } catch (err) {
    console.error(err);
    res.status(500).send("Error con OpenAI");
  }
});

// INICIO SERVIDOR
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ðŸš€ Servidor corriendo en puerto ${PORT
}`));OPENAI_API_KEY=tu_api_key_openai
HEYGEN_API_KEY=tu_api_key_heygen
ELEVEN_API_KEY=tu_api_key_elevenlabs
# ðŸ¤– Chat + Avatar + Voz

Servidor en Node.js para conectar:
- OpenAI (ChatGPT)
- HeyGen (Avatar)
- ElevenLabs (Voz)

## ðŸš€ CÃ³mo usar

1. Clonar el repo
   ```bash
   git clone https://github.com/tuusuario/mi-proyecto-chat-avatar.git
   cd mi-proyecto-chat-avatar
